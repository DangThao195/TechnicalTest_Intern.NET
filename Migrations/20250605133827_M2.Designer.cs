// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizApp.Entity;

#nullable disable

namespace QuizApp.Migrations
{
    [DbContext(typeof(QuizDbContext))]
    [Migration("20250605133827_M2")]
    partial class M2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuizApp.Entity.Answer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("QuizApp.Entity.AnswerResult", b =>
                {
                    b.Property<Guid>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberCorrectAnswers")
                        .HasColumnType("int");

                    b.Property<bool>("PassStatus")
                        .HasColumnType("bit");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.HasKey("ResultId");

                    b.ToTable("AnswerResults");
                });

            modelBuilder.Entity("QuizApp.Entity.AnswerResult_Question", b =>
                {
                    b.Property<Guid>("ResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnswerResultResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TimeAnswered")
                        .HasColumnType("int");

                    b.Property<string>("UserAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResultId", "QuestionId");

                    b.HasIndex("AnswerResultResultId");

                    b.ToTable("AnswerResult_Questions");
                });

            modelBuilder.Entity("QuizApp.Entity.Question", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CorrectAnswer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuizApp.Entity.Answer", b =>
                {
                    b.HasOne("QuizApp.Entity.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuizApp.Entity.AnswerResult_Question", b =>
                {
                    b.HasOne("QuizApp.Entity.AnswerResult", null)
                        .WithMany("Result_Questions")
                        .HasForeignKey("AnswerResultResultId");
                });

            modelBuilder.Entity("QuizApp.Entity.AnswerResult", b =>
                {
                    b.Navigation("Result_Questions");
                });

            modelBuilder.Entity("QuizApp.Entity.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
